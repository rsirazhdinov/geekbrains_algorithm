# -*- encoding: utf-8 -*-

# 1. Для каждого упражнения написать программную реализацию.
# Код пишите в файлах с расширением .py в кодировке UTF-8 (в PyCharm работает по умолчанию).
# Каждую задачу необходимо сохранять в отдельный файл. Рекомендуем использовать английские
# имена, например, les_7_task_1, les_7_task_2, и т.д.
# Для оценки «Отлично» необходимо выполнить все задания.
# 1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный
# случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.


import random

SIZE = 10
a = [random.randint(-100, 99) for _ in range(SIZE)]

print(a)


def sort_bubble_v1(array):
    n = 1
    while n < len(array):

        for i in range(len(array) - 1):
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
        n += 1

    return array

# Добавляем индикатор перестановки is_swap. Если перестановок не было, завершаем сортировку.
def sort_bubble_v2(array):
    n = 1

    while n < len(array):
        is_swap = False
        for i in range(len(array) - 1):
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                swap = True
        if not is_swap:
            break
        n += 1
    return array


print(sort_bubble_v1(a[:]))
print(sort_bubble_v2(a[:]))
print(a)
